bin_PROGRAMS += qt/scash-qt
EXTRA_LIBRARIES += qt/libbitcoinqt.a

# scash qt #
QT_TS = \
  qt/locale/bitcoin_en.ts \
  qt/locale/bitcoin_ru.ts

QT_FORMS_UI = \
  qt/forms/aboutdialog.ui \
  qt/forms/addressbookpage.ui \
  qt/forms/askpassphrasedialog.ui \
  qt/forms/coincontroldialog.ui \
  qt/forms/editaddressdialog.ui \
  qt/forms/messageentry.ui \
  qt/forms/masternodelist.ui \
  qt/forms/optionsdialog.ui \
  qt/forms/overviewpage.ui \
  qt/forms/perfmondialog.ui \
  qt/forms/qtcodedialog.ui \
  qt/forms/rpcconsole.ui \
  qt/forms/sendcoinsdialog.ui \
  qt/forms/sendcoinsentry.ui \
  qt/forms/signverifymessagedialog.ui \
  qt/forms/transactiondescdialog.ui

BITCOIN_MM = \
  qt/macdockiconhandler.mm \
  qt/macnotificationhandler.mm

QT_QRC_CPP = qt/qrc_bitcoin.cpp
QT_QRC = qt/bitcoin.qrc
QT_QRC_LOCALE_CPP = qt/qrc_bitcoin_locale.cpp
QT_QRC_LOCALE = qt/bitcoin_locale.qrc

BITCOIN_QT_H = \
  qt/addressbookpage.h \
  qt/addresstablemodel.h \
  qt/askpassphrasedialog.h \
  qt/bitcoinaddressvalidator.h \
  qt/bitcoinamountfield.h \
  qt/bitcoingui.h \
  qt/bitcoinunits.h \
  qt/clientmodel.h \
  qt/coincontroldialog.h \
  qt/coincontroltreewidget.h \
  qt/csvmodelwriter.h \
  qt/editaddressdialog.h \
  qt/guiconstants.h \
  qt/guiutil.h \
  qt/intro.h \
  qt/macdockiconhandler.h \
  qt/macnotificationhandler.h \
  qt/modaloverlay.h \
  qt/masternodelist.h \
  qt/networkstyle.h \
  qt/notificator.h \
  qt/openuridialog.h \
  qt/optionsdialog.h \
  qt/optionsmodel.h \
  qt/overviewpage.h \
  qt/platformstyle.h \
  qt/qvalidatedlineedit.h \
  qt/qvaluecombobox.h \
  qt/receivecoinsdialog.h \
  qt/receiverequestdialog.h \
  qt/recentrequeststablemodel.h \
  qt/rpcconsole.h \
  qt/sendcoinsdialog.h \
  qt/sendcoinsentry.h \
  qt/signverifymessagedialog.h \
  qt/transactiondesc.h \
  qt/transactiondescdialog.h \
  qt/transactionfilterproxy.h \
  qt/transactionrecord.h \
  qt/transactiontablemodel.h \
  qt/transactionview.h \
  qt/utilitydialog.h \
  qt/walletframe.h \
  qt/walletmodel.h \
  qt/walletmodeltransaction.h \
  qt/walletview.h \
  qt/winshutdownmonitor.h

RES_ICONS = \
	qt/res/icons/Scash.ico \
	qt/res/icons/Scash-32.ico

BITCOIN_QT_CPP = \
	qt/bitcoin.cpp \
	qt/bitcoingui.cpp \
	qt/transactiontablemodel.cpp \
	qt/addresstablemodel.cpp \
	qt/optionsdialog.cpp \
	qt/sendcoinsdialog.cpp \
	qt/coincontroldialog.cpp \
	qt/coincontroltreewidget.cpp \
	qt/addressbookpage.cpp \
	qt/signverifymessagedialog.cpp \
	qt/aboutdialog.cpp \
	qt/editaddressdialog.cpp \
	qt/bitcoinaddressvalidator.cpp \
	qt/qrcodedialog.cpp \
	qt/perfmondialog.cpp \
	qt/qrcodegen.cpp

if TARGET_WINDOWS
BITCOIN_QT_CPP += qt/winshutdownmonitor.cpp
endif

if ENABLE_WALLET
BITCOIN_QT_CPP += \
  qt/addressbookpage.cpp \
  qt/addresstablemodel.cpp \
  qt/askpassphrasedialog.cpp \
  qt/coincontroldialog.cpp \
  qt/coincontroltreewidget.cpp \
  qt/editaddressdialog.cpp \
  qt/overviewpage.cpp \
  qt/receivecoinsdialog.cpp \
  qt/receiverequestdialog.cpp \
  qt/recentrequeststablemodel.cpp \
  qt/sendcoinsdialog.cpp \
  qt/sendcoinsentry.cpp \
  qt/signverifymessagedialog.cpp \
  qt/transactiondesc.cpp \
  qt/transactiondescdialog.cpp \
  qt/transactionfilterproxy.cpp \
  qt/transactionrecord.cpp \
  qt/transactiontablemodel.cpp \
  qt/transactionview.cpp \
  qt/walletframe.cpp \
  qt/walletmodel.cpp \
  qt/walletmodeltransaction.cpp \
  qt/walletview.cpp
endif

RES_IMAGES = \
	qt/res/images/about.png \
	qt/res/images/splash.png \
	qt/res/images/wallet.png \
	qt/res/icons/add.png \
	qt/res/icons/connect0_16.png \
	qt/res/icons/connect1_16.png \
	qt/res/icons/quit.png \
	qt/res/icons/connect2_16.png \
	qt/res/icons/overview.png \
	qt/res/icons/tx_mined.png \
	qt/res/icons/connect3_16.png \
	qt/res/icons/connect4_16.png \
	qt/res/icons/address-book.png \
	qt/res/icons/send.png \
	qt/res/icons/message64out.png \
	qt/res/icons/configure.png \
	qt/res/icons/notsynced.png \
	qt/res/icons/export.png \
	qt/res/icons/synced.png \
	qt/res/icons/history.png \
	qt/res/icons/control.png \
	qt/res/icons/filesave.png \
	qt/res/icons/transaction2.png \
	qt/res/icons/editpaste.png \
	qt/res/icons/edit.png \
	qt/res/icons/message64in.png \
	qt/res/icons/lock_closed.png \
	qt/res/icons/message.png \
	qt/res/icons/transaction_conflicted.png \
	qt/res/icons/editcopy.png \
	qt/res/icons/receive.png \
	qt/res/icons/mining.png \
	qt/res/icons/transaction0.png \
	qt/res/icons/clock1.png \
	qt/res/icons/clock2.png \
	qt/res/icons/clock3.png \
	qt/res/icons/message64.png \
	qt/res/icons/clock4.png \
	qt/res/icons/clock5.png \
	qt/res/icons/qrcode.png \
	qt/res/icons/Scash-16.png \
	qt/res/icons/Scash-128.png \
	qt/res/icons/tx_inout.png \
	qt/res/icons/remove.png \
	qt/res/icons/key.png \
	qt/res/icons/connect0_16.png \
	qt/res/icons/Scash-16.png \
	qt/res/icons/Scash-64.png \
	qt/res/icons/lock_open.png \
	qt/res/icons/Scash-128.png \
	qt/res/icons/tx_input.png \
	qt/res/icons/debugwindow.png \
	qt/res/icons/tx_output.png \
	qt/res/icons/perfmon.png

RES_MOVIES = qt/res/movies/update_spinner.mng

BITCOIN_RC = qt/res/bitcoin-qt.rc

BITCOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \
  -I$(builddir)/qt/forms -DQT_NO_KEYWORDS

qt_libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
  $(QT_INCLUDES) $(QT_DBUS_INCLUDES)
qt_libbitcoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)

qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \
  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(RES_ICONS) $(RES_IMAGES) $(RES_CSS) $(RES_MOVIES)

nodist_qt_libbitcoinqt_a_SOURCES = $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)

# forms/foo.h -> forms/ui_foo.h
QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))

# scash-qt binary #
qt_scash_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
  $(QT_INCLUDES)
qt_scash_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)

qt_scash_qt_SOURCES = qt/scash.cpp
if TARGET_DARWIN
  qt_scash_qt_SOURCES += $(BITCOIN_MM)
endif
if TARGET_WINDOWS
  qt_scash_qt_SOURCES += $(BITCOIN_RC)
endif
qt_scash_qt_LDADD = qt/libbitcoinqt.a $(LIBBITCOIN_SERVER)
if ENABLE_WALLET
qt_scash_qt_LDADD += $(LIBBITCOIN_WALLET)
endif
qt_scash_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBLEVELDB) $(LIBMEMENV) \
  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \
  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)
qt_scash_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
qt_scash_qt_LIBTOOLFLAGS = --tag CXX

#locale/foo.ts -> locale/foo.qm
QT_QM=$(QT_TS:.ts=.qm)

SECONDARY: $(QT_QM)

qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_zmq_a_SOURCES) $(libbitcoin_consensus_a_SOURCES) $(libbitcoin_util_a_SOURCES)
    @test -n $(XGETTEXT) || echo "xgettext is required for updating translations"
    $(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) ../share/qt/extract_strings_qt.py $^

translate: qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) qt/scash.cpp $(BITCOIN_QT_H) $(BITCOIN_MM)
    @test -n $(LUPDATE) || echo "lupdate is required for updating translations"
    $(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts qt/locale/bitcoin_en.ts

$(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)
    @test -f $(RCC)
    @test -f $(@D)/$(<F) || cp -f $< $(@D)
      $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_CSS) $(RES_MOVIES)
    @test -f $(RCC)
    $(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) $(RCCFLAGS) -name scash $< | \
      $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

CLEAN_QT = $(nodist_qt_libbitcoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno

CLEANFILES += $(CLEAN_QT)

scash_qt_clean: FORCE
    rm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_scash_qt_OBJECTS) qt/scash-qt$(EXEEXT) $(LIBBITCOINQT)

scash_qt : qt/scash-qt$(EXEEXT)

ui_%.h: %.ui
    @test -f $(UIC)
    @$(MKDIR_P) $(@D)
    $(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo "Error creating $@"; false)

%.moc: %.cpp
    $(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \
      $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

moc_%.cpp: %.h
    $(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \
      $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

%.qm: %.ts
    @test -f $(LRELEASE)
    @$(MKDIR_P) $(@D)
    $(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LRELEASE) -silent $< -qm $@
